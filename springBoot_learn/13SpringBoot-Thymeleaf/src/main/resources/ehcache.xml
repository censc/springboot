<?xml version="1.0" encoding="UTF-8"?>
<ehcache xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:noNamespaceSchemaLocation="http://ehcache.org/ehcache.xsd">

    <!-- 操作系统缓存的临时目录,内存满后写入该目录 -->
    <diskStore path="java.io.tmpdir"/>

    <!-- 默认缓存
         maxElementsInMemory:内存中最多可以存放的元素数量
            overflowToDisk=true:将Cache中多出的元素放入磁盘文件中
            overflowToDisk=false:根据memoryStoreEvictionPolicy策略替换Cache中原有的元素
         eternal:缓存中对象是否永久有效
         imeToIdleSeconds:当eternal=false时使用，缓存数据有效期(单位:秒),时间段内没有访问该元素,将被清除
         timeToLiveSeconds:缓存数据的存活时间
         maxElementsOnDisk:磁盘缓存中最多可以存放的元素数量
         diskExpiryThreadIntervalSeconds:磁盘缓存的清理线程运行间隔
         memoryStoreEvictionPolicy:缓存释放策略,LRU会优先清理最少使用的缓存
         localTempSwap：持久化策略，当堆内存或者非堆内存里面的元素已经满了的时候，将其中的元素临时的存放在磁盘上，重启后就会消失
    -->
    <defaultCache
            maxElementsInMemory="10000"
            eternal="false"
            timeToIdleSeconds="3600"
            timeToLiveSeconds="3600"
            maxElementsOnDisk="10000000"
            diskExpiryThreadIntervalSeconds="120"
            memoryStoreEvictionPolicy="LFU">
        <persistence strategy="localTempSwap"/>
    </defaultCache>

    <cache name="users"
           maxEntriesLocalHeap="200"
           timeToLiveSeconds="600">
    </cache>
</ehcache>